model:
  base_learning_rate: 9.0e-07
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    reg_weight: 1.0
    linear_start: 0.00085
    linear_end: 0.0120
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: image
    cond_stage_key: caption
    image_size: 64
    channels: 4
    cond_stage_trainable: true   # Note: different from the one we trained before
    conditioning_key: crossattn
    monitor: val/loss_simple_ema
    scale_factor: 0.18215
    use_ema: False
    #embedding_reg_weight: 0.0
    unfreeze_model: True
    model_lr: 6.0e-7
    # scheduler_config:
    #   target: ldm.lr_scheduler.LambdaLinearScheduler
    #   params:
    #     verbosity_interval: 200
    #     warm_up_steps: 5
    #     max_decay_steps: 100
    #     lr_start: 6.0e-7
    #     lr_max: 8.0e-7 
    #     lr_min: 1.0e-7 

    # personalization_config:
    #   target: ldm.modules.embedding_manager.EmbeddingManager
    #   params:
    #     placeholder_strings: ["*"]
    #     initializer_words: ["sculpture"]
    #     per_image_tokens: false
    #     num_vectors_per_token: 1
    #     progressive_words: False

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 32 # unused
        in_channels: 4
        out_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_heads: 8
        use_spatial_transformer: True
        transformer_depth: 1
        context_dim: 768
        use_checkpoint: True
        legacy: False

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        monitor: val/rec_loss
        ddconfig:
          double_z: true
          z_channels: 4
          resolution: 512
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: ldm.modules.encoders.modules.FrozenCLIPEmbedder

data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 6
    num_workers: 8 # should probably not exceed thread count on CPU, good idea to have more workers than batch_size
    wrap: falsegit
    train:
      target: ldm.data.personalized_batch.PersonalizeBatchBase
      params:
        size: 512
        set: train
        repeats: 5
    validation:
      target: ldm.data.personalized.PersonalizedBase
      params:
        size: 512
        set: val
        repeats: 1

lightning:
  modelcheckpoint:
    params:
      every_n_epochs: 1 
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 500
        max_images: 12
        increase_log_steps: False

  trainer:
    benchmark: True
    max_epochs: 5
    #precision: 16 # need lightning 1.6+
    #num_nodes: 2 # for multigpu
    #check_val_every_n_epoch: 1
